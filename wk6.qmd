---
title: "Introduction to Earth Engine"
author: "Gavin Rolls"
date: "2/27/2024"
---

## Summary

After the a week off from class, we were introduced to Google Earth Engine, the platform for remotely sensed data analysis which we will make our home for the remainder of the course. The number of specific tools and operations we learned about in Earth Engine is too great to share concisely in this learning diary format. For that reason, I will focus on what Earth Engine is and what makes it both unique and powerful as a spatial analysis platform.

### What is Earth Engine?

Google Earth Engine is a high-performance geospatial analysis tool, with a particular focus on remote sensing, which was developed to allow researchers and other professionals to use high performance computing technologies in their work without requiring the requisite IT skill which has been required to take advantage of these resources in the past [@gorelickGoogleEarthEngine2017]. The nature of remotely sensed data - raster datasets covering large expanses of the world's surface - requires large computing resources to process at scale.

Earth Engine satisfies these computational requirements by utilising a technique called parallel computing, wherein computationally intensive tasks are split into independent sub-tasks and processed simultaneously on multiple CPUs [@gorelickGoogleEarthEngine2017]. The core idea behind the application's architecture then, is that processing happens server-side instead of on a local machine as GIS programmes have typically required. Users interface with Earth Engine using JavaScript or Python-enabled libraries.

![The basic Earth Engine architecture - @gorelickGoogleEarthEngine2017](img/GEEArch.png){width="600"}

In addition to reducing the local computational power required to efficiently utilise remotely sensed data, Earth Engine claims its other distinct advantage as that of data access and management. Google provides a 'data catalogue' which contains petabytes of the most commonly used (and arguably important) remotely sensed datasets available [@campos-tabernerGlobalEstimationBiophysical2018]. In addition to being constantly updated, this catalogue also includes historical readings from many satellite platforms which, when combined with the use of the aforementioned parallel processing paradigm, makes temporal analysis of RS data much easier [@campos-tabernerGlobalEstimationBiophysical2018].

![Samples of Earth Engine's Data Catalog - @earthengine2019](img/Catalogue.bin.gif)

## Applications in Research

Google Earth Engine has seen increasingly wide use in recent years, although the most common characteristics of its applications, per @tamiminiaGoogleEarthEngine2020 are:

1.  The use of multi-temporal data
2.  Use of data from optical sensor platforms, particularly Landsat and MODIS
3.  Applications with a particular focus on phenomena in the natural environment

In particular, products like NDVI, land-cover, and forest change datasets were used in a substantial number of applications. Additionally, the application of machine learning techniques is becoming increasingly common [@tamiminiaGoogleEarthEngine2020].

With that said, the two applications I'd like to further investigate are the use of Landsat imagery for population mapping and urban change over time from @patelMultitemporalSettlementPopulation2015 and monitoring changes in heat island effects as a result of land cover changes from @ravanelliMonitoringImpactLand2018.

@patelMultitemporalSettlementPopulation2015 measure urban change over the 40-year lifespan of the Landsat programme by extracting urban areas from Landsat data. To do this, they calculate the Normalized Difference Spectral Vector (NDSV), which is a vector containing all possible normalised indexes of band pairs for a total of 30. They write that urban areas have a unique NDSV signature and can thus be used to identify urban change. From that point, they apply a random forest model to estimate area populations. As the authors themselves write, Earth Engine is the obvious tool to use in this context as it allows for the efficient processing of multi-temporal RS data, making it perfect for analysing urban change over time.

@ravanelliMonitoringImpactLand2018 also take advantage of the spatio-temporal richness of Earth Engine's data catalogue, but apply it instead to surface urban heat island effects, or SUHI, in an attempt to understand how land cover changes may play a role. To do this, they use land-cover maps (NCLD, as the study is US centric) to measure land-cover change and Climate Engine, a tool integrated with Earth Engine, to derive land surface temperature (LST) from the Landsat product. They then apply a simple linear regression model on a per-pixel basis to understand the relationship with LST. @ravanelliMonitoringImpactLand2018 were less concerned with specific results and more interested in demonstrating the potential efficacy of their method for connecting LST and land-cover. To that end, they identified inconsistencies in their data between swings in LST versus air temperature as measured from ground-based weather monitoring stations.

## Reflection

At a personal level, I have an interesting relationship with Google Earth Engine. The platform was my first exposure to geospatial science at large and it catalysed my interest in the topic. With that said, I was brought onto the research group in which I used Earth Engine because of my computer science background and as a result, taught myself much of what I know now. I'm excited, then, to learn about Earth Engine in a formal context and hopefully clarify many of the misunderstandings I inevitably generated on my earlier journey. Because of the fact that I was self-taught, I always found the JavaScript-based approach to GIS to be quite cumbersome and found QGIS much easier to learn and understand. With that said, reading the original papers on the origins of Earth Engine has me far more sold on its merits than I originally was when I started using the system. The computational power it grants users to is mind-boggling, and I am very much being literal when I say that.

A topic of particular interest to me is that of Earth Engine and its use in machine learning. Machine learning broadly is a topic which I have spent very little time focusing on and until this week's lecture, I wasn't aware that it was one of the main selling points of Earth Engine. It's something I'd like to explore down the line, be in it a dissertation or personal project.

## **References**
